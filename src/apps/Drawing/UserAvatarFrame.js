import React, {PureComponent} from 'react';
import PropTypes from 'prop-types';
import {Avatar, Button, PopoutWrapper, Tooltip} from "@vkontakte/vkui";
import {Icon24Flash, Icon28CancelCircleOutline, Icon28CoinsOutline} from "@vkontakte/icons";
import {isPlatformIOS, openUrl} from "../../js/utils";

export const UserAvatarFrames = {
    1: <svg xmlns="http://www.w3.org/2000/svg">
        <defs>
            <clipPath id="clipAvatar1" clipPathUnits="objectBoundingBox">
                <circle cx="0.497087" cy="0.502947" r="0.497087" fill="black"/>
            </clipPath>
        </defs>
    </svg>,
    2: <svg xmlns="http://www.w3.org/2000/svg">
        <defs>
            <clipPath id="clipAvatar2" clipPathUnits="objectBoundingBox">
                <path fill-rule="evenodd" clip-rule="evenodd"
                      d="M0.994175 0.497087L0.994162 0.546795L0.994125 0.567384L0.994063 0.583179L0.993976 0.596491L0.993864 0.608216L0.993727 0.618812L0.993566 0.62855L0.993379 0.63761L0.993168 0.646113L0.992932 0.654149L0.99267 0.661786L0.992384 0.669077L0.992073 0.676062L0.991737 0.682777L0.991376 0.689247L0.99099 0.695498L0.990579 0.701548L0.990143 0.707414L0.989682 0.713111L0.989196 0.718651L0.988684 0.724045L0.988148 0.729302L0.987586 0.734432L0.986999 0.739441L0.986387 0.744337L0.98575 0.749126L0.985087 0.753813L0.984399 0.758404L0.983686 0.762902L0.982947 0.767313L0.982183 0.771639L0.981393 0.775885L0.980578 0.780053L0.979737 0.784147L0.978871 0.788169L0.977979 0.792122L0.977061 0.796008L0.976117 0.79983L0.975147 0.803588L0.974152 0.807287L0.97313 0.810926L0.972083 0.814508L0.971009 0.818034L0.969909 0.821507L0.968783 0.824926L0.967631 0.828294L0.966452 0.831611L0.965246 0.83488L0.964014 0.8381L0.962756 0.841273L0.96147 0.844401L0.960158 0.847483L0.958819 0.850521L0.957453 0.853515L0.956059 0.856467L0.954639 0.859377L0.953191 0.862246L0.951715 0.865074L0.950212 0.867863L0.948681 0.870612L0.947123 0.873323L0.945536 0.875996L0.943921 0.878631L0.942278 0.881229L0.940606 0.88379L0.938906 0.886316L0.937177 0.888805L0.935419 0.89126L0.933633 0.89368L0.931816 0.896066L0.929971 0.898417L0.928096 0.900735L0.926191 0.903019L0.924255 0.905271L0.92229 0.90749L0.920294 0.909676L0.918268 0.911831L0.91621 0.913954L0.914121 0.916045L0.912001 0.918105L0.909849 0.920134L0.907665 0.922132L0.905449 0.9241L0.9032 0.926038L0.900918 0.927945L0.898603 0.929823L0.896254 0.931671L0.893871 0.933489L0.891454 0.935278L0.889002 0.937038L0.886515 0.93877L0.883993 0.940472L0.881434 0.942146L0.878839 0.943791L0.876207 0.945408L0.873537 0.946997L0.870829 0.948558L0.868083 0.950091L0.865298 0.951597L0.862473 0.953074L0.859607 0.954525L0.8567 0.955947L0.853752 0.957343L0.850761 0.958711L0.847726 0.960053L0.844648 0.961367L0.841524 0.962654L0.838355 0.963915L0.835138 0.965149L0.831873 0.966357L0.82856 0.967538L0.825196 0.968692L0.821781 0.969821L0.818313 0.970922L0.814791 0.971998L0.811213 0.973048L0.807579 0.974071L0.803885 0.975069L0.800131 0.976041L0.796315 0.976986L0.792434 0.977906L0.788486 0.978801L0.78447 0.979669L0.780382 0.980512L0.77622 0.981329L0.77198 0.982121L0.76766 0.982887L0.763257 0.983628L0.758765 0.984343L0.754182 0.985033L0.749503 0.985698L0.744722 0.986337L0.739835 0.986952L0.734835 0.98754L0.729715 0.988104L0.724468 0.988642L0.719086 0.989156L0.713558 0.989644L0.707874 0.990107L0.702022 0.990545L0.695987 0.990958L0.689753 0.991346L0.683301 0.991709L0.676607 0.992047L0.669644 0.99236L0.662379 0.992649L0.654771 0.992912L0.646769 0.99315L0.638306 0.993363L0.629295 0.993552L0.619616 0.993715L0.609097 0.993854L0.597476 0.993968L0.584314 0.994057L0.568769 0.994121L0.548737 0.99416L0.511115 0.994175L0.449399 0.994164L0.428204 0.994129L0.412146 0.994069L0.398677 0.993984L0.386846 0.993874L0.376172 0.993739L0.366373 0.99358L0.357264 0.993395L0.348721 0.993186L0.34065 0.992951L0.332983 0.992692L0.325667 0.992408L0.318658 0.992099L0.311923 0.991765L0.305434 0.991406L0.299166 0.991022L0.293101 0.990613L0.287221 0.990179L0.281511 0.989719L0.275959 0.989235L0.270554 0.988726L0.265286 0.988191L0.260147 0.987632L0.255128 0.987047L0.250223 0.986437L0.245426 0.985802L0.240731 0.985141L0.236133 0.984455L0.231627 0.983744L0.22721 0.983007L0.222877 0.982245L0.218625 0.981457L0.21445 0.980644L0.210351 0.979805L0.206323 0.978941L0.202365 0.978051L0.198473 0.977135L0.194647 0.976193L0.190883 0.975225L0.18718 0.974232L0.183536 0.973213L0.17995 0.972167L0.176419 0.971096L0.172942 0.969998L0.169519 0.968874L0.166147 0.967723L0.162825 0.966547L0.159553 0.965343L0.156329 0.964114L0.153152 0.962857L0.150021 0.961574L0.146935 0.960264L0.143894 0.958927L0.140896 0.957563L0.137941 0.956171L0.135028 0.954753L0.132155 0.953307L0.129324 0.951834L0.126532 0.950333L0.12378 0.948804L0.121066 0.947248L0.11839 0.945663L0.115752 0.944051L0.113151 0.94241L0.110587 0.940741L0.108059 0.939043L0.105566 0.937316L0.103109 0.935561L0.100686 0.933776L0.0982977 0.931962L0.0959435 0.930119L0.093623 0.928246L0.0913359 0.926343L0.0890817 0.924411L0.0868602 0.922448L0.0846711 0.920454L0.082514 0.91843L0.0803888 0.916375L0.078295 0.914289L0.0762325 0.912171L0.074201 0.910022L0.0722003 0.90784L0.07023 0.905627L0.0682901 0.90338L0.0663803 0.901101L0.0645003 0.898788L0.06265 0.896442L0.0608292 0.894062L0.0590377 0.891648L0.0572752 0.889199L0.0555418 0.886715L0.053837 0.884195L0.0521609 0.881639L0.0505133 0.879047L0.0488939 0.876418L0.0473028 0.873751L0.0457396 0.871047L0.0442043 0.868303L0.0426968 0.865521L0.0412169 0.862699L0.0397645 0.859837L0.0383395 0.856933L0.0369418 0.853988L0.0355713 0.851001L0.0342278 0.84797L0.0329113 0.844895L0.0316216 0.841775L0.0303588 0.838609L0.0291226 0.835396L0.027913 0.832135L0.0267299 0.828826L0.0255732 0.825466L0.0244429 0.822055L0.0233389 0.818591L0.0222611 0.815073L0.0212093 0.8115L0.0201837 0.80787L0.0191841 0.804182L0.0182103 0.800432L0.0172625 0.796621L0.0163405 0.792745L0.0154442 0.788803L0.0145736 0.784792L0.0137287 0.78071L0.0129094 0.776554L0.0121156 0.772321L0.0113473 0.768007L0.0106045 0.763611L0.00988714 0.759126L0.00919514 0.754551L0.00852848 0.749879L0.00788712 0.745107L0.00727103 0.740228L0.00668018 0.735237L0.00611453 0.730127L0.00557405 0.724891L0.00505871 0.719519L0.00456848 0.714003L0.00410335 0.708333L0.00366328 0.702494L0.00324826 0.696475L0.00285825 0.690257L0.00249324 0.683823L0.00215322 0.677149L0.00183815 0.670209L0.00154804 0.662969L0.00128286 0.655391L0.00104259 0.647422L0.000827238 0.638999L0.000636778 0.630035L0.000471204 0.620415L0.000330509 0.609971L0.000214684 0.59845L0.000123725 0.585434L5.76268e-05 0.570129L1.63857e-05 0.550608L0 0.516925L8.46877e-06 0.451509L4.17925e-05 0.429647L9.99728e-05 0.413311L0.000183013 0.399681L0.000290916 0.387741L0.000423688 0.376987L0.000581337 0.367125L0.000763869 0.357967L0.000971293 0.349382L0.00120362 0.341277L0.00146086 0.33358L0.00174304 0.326237L0.00205015 0.319206L0.00238222 0.31245L0.00273927 0.305942L0.00312131 0.299658L0.00352837 0.293577L0.00396046 0.287682L0.0044176 0.28196L0.00489983 0.276396L0.00540717 0.270979L0.00593964 0.265701L0.00649727 0.260551L0.00708009 0.255523L0.00768814 0.250609L0.00832144 0.245804L0.00898004 0.241101L0.00966397 0.236495L0.0103733 0.231982L0.011108 0.227558L0.0118681 0.223219L0.0126537 0.21896L0.0134649 0.21478L0.0143017 0.210674L0.0151641 0.206641L0.0160522 0.202677L0.016966 0.198781L0.0179056 0.194949L0.0188711 0.19118L0.0198625 0.187472L0.0208798 0.183824L0.0219232 0.180233L0.0229927 0.176698L0.0240884 0.173217L0.0252103 0.169789L0.0263586 0.166413L0.0275333 0.163088L0.0287344 0.159812L0.0299621 0.156584L0.0312165 0.153403L0.0324976 0.150268L0.0338055 0.147179L0.0351404 0.144134L0.0365023 0.141133L0.0378914 0.138174L0.0393076 0.135258L0.0407513 0.132382L0.0422224 0.129548L0.0437211 0.126753L0.0452475 0.123997L0.0468018 0.12128L0.0483841 0.118602L0.0499944 0.115961L0.051633 0.113357L0.0533001 0.110789L0.0549956 0.108258L0.0567199 0.105763L0.0584731 0.103303L0.0602554 0.100877L0.0620668 0.0984863L0.0639077 0.0961294L0.0657782 0.0938063L0.0676785 0.0915164L0.0696088 0.0892597L0.0715694 0.0870356L0.0735604 0.0848439L0.0755821 0.0826843L0.0776347 0.0805565L0.0797184 0.0784602L0.0818336 0.0763953L0.0839805 0.0743613L0.0861594 0.0723581L0.0883706 0.0703855L0.0906143 0.0684431L0.0928909 0.0665309L0.0952008 0.0646486L0.0975442 0.0627959L0.0999215 0.0609727L0.102333 0.0591789L0.104779 0.0574142L0.107261 0.0556784L0.109778 0.0539714L0.112331 0.052293L0.11492 0.0506431L0.117546 0.0490215L0.12021 0.0474281L0.122911 0.0458627L0.125651 0.0443252L0.12843 0.0428155L0.131249 0.0413334L0.134108 0.0398788L0.137008 0.0384516L0.13995 0.0370517L0.142934 0.035679L0.145962 0.0343334L0.149033 0.0330148L0.15215 0.031723L0.155312 0.030458L0.158521 0.0292197L0.161778 0.028008L0.165084 0.0268228L0.168439 0.025664L0.171846 0.0245316L0.175306 0.0234255L0.178819 0.0223455L0.182388 0.0212918L0.186013 0.020264L0.189697 0.0192623L0.193441 0.0182865L0.197248 0.0173366L0.201118 0.0164125L0.205055 0.0155142L0.20906 0.0146416L0.213137 0.0137946L0.217287 0.0129733L0.221514 0.0121775L0.225821 0.0114072L0.230211 0.0106624L0.234688 0.00994295L0.239256 0.00924893L0.24392 0.00858025L0.248684 0.00793688L0.253554 0.00731878L0.258535 0.00672592L0.263636 0.00615826L0.268862 0.00561577L0.274222 0.00509843L0.279726 0.00460621L0.285384 0.00413908L0.291209 0.00369702L0.297213 0.00328L0.303414 0.002888L0.309831 0.002521L0.316485 0.00217899L0.323402 0.00186194L0.330617 0.00156983L0.338167 0.00130267L0.346102 0.00106042L0.354487 0.000843081L0.363403 0.000650639L0.372966 0.000483084L0.383337 0.000340407L0.394759 0.000222603L0.407635 0.000129663L0.422711 6.15854e-05L0.441759 1.8365e-05L0.472791 0L0.540454 6.48955e-06L0.563052 3.78339e-05L0.579681 9.40348e-05L0.593479 0.000175095L0.605531 0.000281018L0.616367 0.00041181L0.626291 0.000567477L0.6355 0.000748027L0.644127 0.00095347L0.652268 0.00118381L0.659995 0.00143907L0.667364 0.00171926L0.674419 0.00202439L0.681196 0.00235447L0.687722 0.00270953L0.694024 0.00308958L0.70012 0.00349464L0.706029 0.00392474L0.711765 0.00437989L0.717341 0.00486012L0.722769 0.00536545L0.728058 0.00589592L0.733217 0.00645155L0.738255 0.00703237L0.743177 0.0076384L0.747991 0.0082697L0.752703 0.00892628L0.757316 0.00960819L0.761836 0.0103155L0.766267 0.0110481L0.770613 0.0118063L0.774878 0.0125899L0.779064 0.013399L0.783176 0.0142337L0.787215 0.0150941L0.791184 0.0159801L0.795086 0.0168919L0.798922 0.0178295L0.802696 0.0187929L0.806409 0.0197822L0.810062 0.0207975L0.813657 0.0218388L0.817197 0.0229062L0.820682 0.0239998L0.824114 0.0251197L0.827494 0.0262658L0.830823 0.0274384L0.834103 0.0286374L0.837335 0.029863L0.84052 0.0311152L0.843658 0.0323942L0.846751 0.0337L0.849799 0.0350327L0.852804 0.0363925L0.855766 0.0377794L0.858686 0.0391935L0.861564 0.040635L0.864402 0.0421039L0.8672 0.0436004L0.869959 0.0451246L0.872679 0.0466766L0.87536 0.0482567L0.878004 0.0498648L0.880611 0.0515011L0.883182 0.0531659L0.885716 0.0548592L0.888214 0.0565812L0.890677 0.0583321L0.893105 0.060112L0.895499 0.0619211L0.897858 0.0637597L0.900184 0.0656278L0.902477 0.0675257L0.904736 0.0694537L0.906963 0.0714118L0.909157 0.0734004L0.911319 0.0754196L0.913449 0.0774697L0.915548 0.079551L0.917616 0.0816637L0.919652 0.083808L0.921658 0.0859844L0.923633 0.0881929L0.925577 0.0904341L0.927492 0.0927081L0.929377 0.0950152L0.931232 0.097356L0.933057 0.0997306L0.934853 0.102139L0.93662 0.104583L0.938359 0.107062L0.940068 0.109576L0.941749 0.112126L0.943401 0.114712L0.945025 0.117335L0.94662 0.119996L0.948188 0.122694L0.949728 0.125431L0.951239 0.128207L0.952724 0.131023L0.95418 0.133879L0.95561 0.136776L0.957012 0.139714L0.958387 0.142695L0.959734 0.145719L0.961055 0.148787L0.962349 0.1519L0.963616 0.155058L0.964857 0.158263L0.966071 0.161516L0.967258 0.164818L0.968419 0.16817L0.969553 0.171573L0.970662 0.175028L0.971744 0.178537L0.972799 0.182101L0.973829 0.185722L0.974833 0.189401L0.975811 0.19314L0.976763 0.196942L0.977689 0.200807L0.978589 0.204738L0.979464 0.208738L0.980313 0.212809L0.981136 0.216953L0.981934 0.221174L0.982707 0.225474L0.983453 0.229858L0.984175 0.234328L0.984871 0.238888L0.985542 0.243544L0.986187 0.2483L0.986807 0.253162L0.987402 0.258134L0.987972 0.263225L0.988516 0.268441L0.989035 0.27379L0.98953 0.279282L0.989999 0.284928L0.990443 0.290738L0.990862 0.296728L0.991256 0.302913L0.991625 0.309311L0.991969 0.315945L0.992288 0.322841L0.992582 0.33003L0.992851 0.337552L0.993095 0.345455L0.993315 0.3538L0.993509 0.362671L0.993679 0.372177L0.993823 0.382476L0.993943 0.393803L0.994038 0.406542L0.994108 0.4214L0.994153 0.440009L0.994174 0.469032L0.994175 0.497087Z"
                      fill="black"/>
            </clipPath>
        </defs>
    </svg>,
    3: <svg xmlns="http://www.w3.org/2000/svg">
        <defs>
            <clipPath id="clipAvatar3" clipPathUnits="objectBoundingBox">
                <path fill-rule="evenodd" clip-rule="evenodd"
                      d="M0.900161 0.225626C0.918544 0.242436 0.931355 0.264328 0.93692 0.288438L0.991067 0.523035C0.996814 0.547934 0.994552 0.573982 0.984595 0.597553L0.895569 0.808316C0.885062 0.833191 0.866553 0.853967 0.842897 0.867442L0.649289 0.977719C0.625633 0.991193 0.598141 0.996618 0.571051 0.993158L0.341525 0.963839C0.315855 0.96056 0.291859 0.949469 0.272875 0.93211L0.0940134 0.768548C0.0756313 0.751739 0.0628198 0.729847 0.0572549 0.705737L0.00310751 0.47114C-0.00263951 0.446241 -0.000377275 0.420193 0.00957951 0.396621L0.0986059 0.185859C0.109113 0.160983 0.127621 0.140208 0.151278 0.126733L0.344886 0.0164562C0.368542 0.00298171 0.396034 -0.00244339 0.423124 0.00101696L0.65265 0.0303355C0.67832 0.0336145 0.702316 0.0447054 0.7213 0.0620652L0.900161 0.225626Z"
                      fill="black"/>
            </clipPath>
        </defs>
    </svg>,
    4: <svg xmlns="http://www.w3.org/2000/svg">
        <defs>
            <clipPath id="clipAvatar4" clipPathUnits="objectBoundingBox">
                <path
                    d="M0.790574 0.113435L0.432444 0.0183842C0.389575 0.00700625 0.343891 0.0193388 0.312571 0.0507445L0.050708 0.313326C0.0193334 0.344787 0.00714221 0.390604 0.0187327 0.433497L0.115706 0.792364C0.127258 0.835117 0.160689 0.868491 0.203461 0.87997L0.559531 0.975538C0.602488 0.987067 0.648331 0.97476 0.679738 0.943268L0.943444 0.678842C0.974831 0.64737 0.987019 0.601531 0.975408 0.558626L0.878651 0.201086C0.867055 0.158234 0.833481 0.124823 0.790574 0.113435Z"
                    fill="black"/>
            </clipPath>
        </defs>
    </svg>,
    5: <svg xmlns="http://www.w3.org/2000/svg">
        <defs>
            <clipPath id="clipAvatar5" clipPathUnits="objectBoundingBox">
                <path
                    d="M0.415435 0.0552153C0.446935 -0.018405 0.54724 -0.0184051 0.57874 0.0552152L0.655146 0.233789C0.668138 0.264153 0.69568 0.285001 0.727415 0.28849L0.914047 0.309011C0.990989 0.317471 1.02198 0.416853 0.96451 0.470813L0.8251 0.601699C0.801395 0.623955 0.790875 0.657686 0.797496 0.690207L0.836435 0.881464C0.852488 0.960313 0.77134 1.02173 0.704319 0.981463L0.541752 0.883781C0.51411 0.867171 0.480065 0.867171 0.452423 0.883781L0.289856 0.981463C0.222835 1.02173 0.141687 0.960313 0.15774 0.881464L0.196679 0.690207C0.2033 0.657686 0.192779 0.623955 0.169074 0.601699L0.0296643 0.470813C-0.0278101 0.416853 0.00318571 0.317471 0.0801281 0.309011L0.26676 0.28849C0.298494 0.285001 0.326037 0.264153 0.339029 0.233789L0.415435 0.0552153Z"
                    fill="black"/>
            </clipPath>
        </defs>
    </svg>
}

export class UserAvatar extends PureComponent {

    constructor(props) {
        super(props);
        this.state = {}
    }

    render() {
        const {iosOptimize, style, size, onClick, src, frame, color, badge, badgeValue} = this.props;
        const {tooltip} = this.state;
        const border = color === 0 ? 'var(--background_content)' : `var(--palette_gradient_${color})`;
        const borderWidth = size / 100 * 6;

        //['-webkit-mask-image']
        return iosOptimize ? (
            <Avatar size={size} shadow={false} src={src}/>
        ) : (
            <div
                className='UserAvatar'
                style={{
                    width: size,
                    height: size,
                    ...(style ? style : {})
                }}
                onClick={onClick}
            >
                <img
                    alt='avatar'
                    src={src}
                    style={{
                        clipPath: `url(#clipAvatar${frame + 1})`
                    }}
                />
                <div
                    className='UserAvatarBorder'
                    style={{
                        clipPath: `url(#clipAvatar${frame + 1})`,
                        background: border,
                        left: -borderWidth,
                        right: -borderWidth,
                        top: -borderWidth,
                        bottom: -borderWidth
                    }}
                />
                {
                    badge && <div
                        className='Badge'
                        style={{
                            background: badgeValue ? '#83E261' : '#A1A1A1'
                        }}
                    />
                }
            </div>
        )
    }

}

UserAvatar.defaultProps = {
    onClick: () => {
    },
    size: 48,
    frame: 1,
    color: 0
};

UserAvatar.propTypes = {
    onClick: PropTypes.func,
    src: PropTypes.string,
    size: PropTypes.number,
    frame: PropTypes.number,
    color: PropTypes.number,
    badge: PropTypes.bool,
    badgeValue: PropTypes.bool,
    iosOptimize: PropTypes.bool
};

export class UserAvatarFrame extends PureComponent {
    constructor(props) {
        super(props);

        const {user} = props.t.state;
        this.state = {
            frame: user.frame_type,
            color: user.frame_color
        };
    }

    render() {
        const {t} = this.props;
        const {vk_user, user, gradients} = t.state;
        const {frame, color} = this.state;
        const isIos = isPlatformIOS();
        return (
            <div className='UserAvatarFrame'>
                <UserAvatar
                    size={100}
                    src={vk_user.photo_max_orig}
                    frame={frame}
                    color={color}
                />
                <div>
                    <div>
                        <h1>Форма</h1>
                        <div>
                            {
                                Object.keys(UserAvatarFrames).map((value, index) =>
                                    <div
                                        key={`Frame-${index}`}
                                        style={{
                                            boxShadow: index === frame && 'inset 0 0 0 3px var(--custom_card_solo_text_color)'
                                        }}
                                        onClick={() => this.setState({frame: index})}
                                    >
                                        <div
                                            style={{
                                                clipPath: `url(#clipAvatar${value})`,
                                                background: 'var(--custom_card_solo_text_color)',
                                                width: 56,
                                                height: 56
                                            }}
                                        />
                                    </div>
                                )
                            }
                        </div>
                    </div>
                    <div>
                        <h1>Цвет</h1>
                        <div>
                            {
                                gradients.map((value, index) => {
                                    const gradient = `conic-gradient(from 180deg at 50% 50%, ${[...value.slice(0, value.length - 2), value[0]].join(', ')})`;
                                    return <div key={`gradient-${index}`} style={{
                                        background: gradient
                                    }} onClick={() => {
                                        if (user.vk_donut || user.admin || user.premium) {
                                            this.setState({color: index + 1});
                                        } else {
                                            t.setPopout(<PopoutWrapper>
                                                <div className='GameAfkWarning'>
                                                    <div className='GameAfkWarning-Icon'>
                                                        <Icon28CancelCircleOutline/>
                                                    </div>
                                                    <div className='GameAfkWarning-Title'>
                                                        Нет доступа
                                                    </div>
                                                    {
                                                        isIos ? <React.Fragment>
                                                                <div className='GameAfkWarning-Description'>
                                                                    В статье указано, как получить доступ к изменению цвета
                                                                    рамки
                                                                </div>
                                                                <div
                                                                    className='GameAfkWarning-Button'
                                                                    onClick={() => openUrl('https://vk.com/@draw_app-avocadoplus')}
                                                                >
                                                                    <Icon24Flash width={20} height={20}/> Перейти
                                                                </div>
                                                            </React.Fragment>
                                                            :
                                                            <React.Fragment>
                                                                <div className='GameAfkWarning-Description'>
                                                                    Оформите подписку avocado+, чтобы изменить цвет
                                                                    рамки
                                                                </div>
                                                                <div
                                                                    className='GameAfkWarning-Button'
                                                                    onClick={() => {
                                                                        t.setPopout(null);
                                                                        t.go('vk_donut_avocado');
                                                                    }}
                                                                >
                                                                    Оформить
                                                                </div>
                                                            </React.Fragment>
                                                    }
                                                    <div
                                                        className='GameAfkWarning-Button-Close'
                                                        onClick={() => t.setPopout(null)}
                                                    >
                                                        Закрыть
                                                    </div>
                                                </div>
                                            </PopoutWrapper>);
                                        }
                                    }}>
                                        <div>
                                            <div
                                                style={{
                                                    display: color !== index + 1 && 'none',
                                                    background: gradient
                                                }}
                                            />
                                        </div>
                                    </div>
                                })
                            }
                        </div>
                    </div>
                </div>
                <div>
                    <Button
                        stretched
                        size='l'
                        mode='gradient_pink'
                        disabled={user.frame_type === frame && user.frame_color === color}
                        onClick={() => {
                            if (user.coins < 5000) {
                                t.setSnackbar('Недостаточно средств');
                            } else {
                                t.socket.call('frames.save', {frame_type: frame, frame_color: color}, async r => {
                                    if (!r.response) {
                                        t.setSnackbar(r.error.message);
                                    } else {
                                        user.frame_type = frame;
                                        user.frame_color = color;
                                        await t.setState({user});

                                        t.back();
                                        t.setSnackbar('Вы изменили рамку');
                                    }
                                });
                            }
                        }}
                        after={<Icon28CoinsOutline/>}
                    >
                        Изменить за 5к
                    </Button>
                    <Button
                        stretched
                        size='l'
                        mode='secondary'
                        onClick={() => t.back()}
                    >
                        Отмена
                    </Button>
                </div>
            </div>
        );
    }

}

UserAvatarFrame.defaultProps = {};

UserAvatarFrame.propTypes = {
    t: PropTypes.object
};

export default UserAvatarFrame;